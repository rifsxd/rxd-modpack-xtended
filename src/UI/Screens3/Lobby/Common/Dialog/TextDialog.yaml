Header:
    version: 153
ImportedPackages:
- "~res:/UI/Screens3/Lobby/Common/Button.yaml"
- "~res:/UI/Screens3/Common/OverlayBlur.yaml"
- "~res:/UI/Screens3/Common/VerticalScrollBar.yaml"
Prototypes:
-   class: "UIControl"
    name: "TextDialog"
    size: [640.000000, 480.000000]
    input: false
    components:
        UIAnimationComponent:
            animations: "_INIT,~res:/UI/Screens3/Lobby/Common/Dialog/DialogOpen.animation"
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfParent"
        ModalInput: {}
        UIVirtualActionEventComponent0:
            virtualKeyAction: "Escape"
            keyDownEvent: "BACK_SHORTCUT"
        UIVirtualActionEventComponent1:
            virtualKeyAction: "Extra2"
            keyDownEvent: "ENTER_SHORTCUT"
        UIShortcutEventComponent:
            shortcuts: "BACK_SHORTCUT,Back;BACK_SHORTCUT,Escape;ENTER_SHORTCUT,Enter;BACK_SHORTCUT,Gamepad A"
        UIDataParamsComponent:
            params:
            - ["float", "verticalIndent", "0", "0"]
            - ["bool", "showScroll", "false", "false"]
            - ["bool", "closeOnAcceptAction", "true", "true"]
            - ["bool", "backEnabled", "true", "true"]
            - ["control", "acceptButtonControl", "null", "null"]
            - ["eButtonType", "accentButtonType", "eButtonType.POSITIVE", "eButtonType.POSITIVE"]
            - ["eButtonType", "optionalButtonType", "eButtonType.OPTIONAL_LIGHT", "eButtonType.OPTIONAL_LIGHT"]
            - ["eDialogType", "type", "eDialogType.INFO", "eDialogType.PUSH"]
            - ["string", "header", "\"Header\"", "\"\""]
            - ["string", "headerImage", "\"\"", "\"~res:/Gfx/UI/Tutorial/icon_congratulations.psd\""]
            - ["string", "accentButton", "\"#APPLY\"", "\"APPLY\""]
            - ["string", "optionalButton", "\"#Cancel\"", "\"CANCEL\""]
            - ["control", "contentControl", "control(\"~res:/UI/Screens3/Lobby/Common/Dialog/TextContent.yaml\", { \"contentText\" = \"Его многочисленные, убого тонкие по сравнению с остальным телом ножки беспомощно копошились у него перед глазами. «Что со мной случилось?\"; }, [ ])", "control(\"~res:/UI/Screens3/Lobby/Common/Dialog/TextContent.yaml\", { \"contentText\" = \"Его многочисленные, убого тонкие по сравнению с остальным телом ножки беспомощно копошились у него перед глазами. «Что со мной случилось?\"; }, [ ])"]
            - ["control", "metaphorContent", "null", "null"]
            - ["bool", "acceptButtonEnabled", "true", "true"]
            - ["bool", "closeByTap", "true", "true"]
            events:
            - "BACK_SHORTCUT"
            - "START_CLOSING_ANIMATION"
            - "ACCENT_CLICKED"
            - "OPTIONAL_CLICKED"
        UIDataLocalVarsComponent:
            data:
            - ["float", "scrollViewYPosition", "0.000000"]
            - ["float", "scrollViewYSize", "0.000000"]
        UIDataLocalBindingsComponent:
            data:
            - ["string", "accentButtonText", "accentButton"]
            - ["string", "optionalButtonText", "optionalButton"]
        UIActionComponent:
            actionsPath: "~res:/UI/Screens3/Lobby/Common/Dialog/Dialog.actions"
    children:
    -   prototype: "OverlayBlur/BlurAndFade"
        name: "BlurAndFade"
    -   class: "UIControl"
        name: "TapArea"
        components:
            Background:
                sprite: "~res:/Gfx/Lobby//backgrounds/quit-menu/bg_quit-menu"
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
            SizePolicy:
                horizontalPolicy: "Formula"
                horizontalFormula: "parent - 32"
                verticalPolicy: "Formula"
                verticalFormula: "parent - 32"
            UIInputEventComponent:
                onTouchUpInside: "OPTIONAL_ACTION"
                onTouchUpInsideData: "true"
        bindings:
        - ["input", "closeByTap and backEnabled"]
    -   class: "UIControl"
        name: "DialogContent"
        pivot: [0.500000, 0.500000]
        classes: "black-50-bg"
        components:
            Background:
                drawType: "DRAW_STRETCH_BOTH"
                sprite: "~res:/Gfx/Lobby/backgrounds/bg_r16.psd"
                leftRightStretchCap: 16.000000
                topBottomStretchCap: 16.000000
            UIOpacityComponent: {}
            Anchor:
                hCenterAnchorEnabled: true
                vCenterAnchorEnabled: true
            LinearLayout:
                orientation: "TopDown"
            SizePolicy:
                horizontalPolicy: "FixedSize"
                horizontalValue: 448.000000
                verticalPolicy: "Formula"
                verticalFormula: "when parent == 0 -> childrenSum,min(childrenSum, parent-80)"
            StyleSheet:
                styles: "~res:/UI/Screens3/Color.style.yaml"
        bindings:
        - ["Anchor.vCenterAnchor", "verticalIndent"]
        children:
        -   class: "UIControl"
            name: "Metaphor"
            components:
                Background:
                    align: ["HCENTER", "BOTTOM"]
                Anchor:
                    hCenterAnchorEnabled: true
                    topAnchorEnabled: true
                    topAnchor: -76.000000
                IgnoreLayout: {}
                SizePolicy:
                    horizontalPolicy: "FixedSize"
                    verticalPolicy: "FixedSize"
                UIChildComponent0:
                    childType: "kControl"
                    condition: "not isNull(metaphorContent) and headerImage.empty()"
                    control: "metaphorContent"
            bindings:
            - ["visible", "(type == eDialogType.INFO or type == eDialogType.CHOOSE) and (headerImage != \"\" or not isNull(metaphorContent))"]
            - ["input", "headerImage != \"\" or not isNull(metaphorContent)"]
            - ["Background.sprite", "headerImage"]
        -   class: "UIControl"
            name: "Header"
            input: false
            components:
                LinearLayout:
                    orientation: "TopDown"
                    padding: "24"
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "PercentOfMaxChild"
            bindings:
            - ["visible", "(type == eDialogType.INFO and header != \"\") or type == eDialogType.PUSH or type == eDialogType.FILL or type == eDialogType.SELECT"]
            children:
            -   class: "UIControl"
                name: "Value"
                input: false
                classes: "t-subtitle regular white-wild-sand-text"
                components:
                    UITextComponent:
                        colorInheritType: "COLOR_IGNORE_PARENT"
                        multiline: "MULTILINE_ENABLED"
                    Anchor:
                        hCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "Formula"
                        horizontalFormula: "min(parent - 48, content)"
                        verticalPolicy: "PercentOfContent"
                    StyleSheet:
                        styles: "~res:/UI/Screens3/Color.style.yaml;~res:/UI/Screens3/Font.style.yaml"
                bindings:
                - ["UITextComponent.text", "localize(header)"]
        -   class: "UIControl"
            name: "SeparatorTop"
            input: false
            classes: "white-wild-sand-10-bg"
            components:
                Background:
                    drawType: "DRAW_FILL"
                UIOpacityComponent: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "FixedSize"
                    verticalValue: 1.000000
                StyleSheet:
                    styles: "~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["visible", "type == eDialogType.FILL"]
        -   class: "UIScrollView"
            name: "UIScrollView"
            autoUpdate: true
            components:
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "Formula"
                    verticalFormula: "when parent == 0 -> maxChild, min(parentRest, maxChild)"
                UILayoutEventComponent:
                    positionChangedEvent: "ScrollViewPositionChanged"
                    positionChangedEventData: "_position.Y"
            children:
            -   class: "UIScrollViewContainer"
                name: "scrollContainerControl"
                components:
                    Anchor:
                        hCenterAnchorEnabled: true
                    LinearLayout:
                        orientation: "TopDown"
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfChildrenSum"
                    UILayoutEventComponent:
                        sizeChangedEvent: "ScrollContentSizeChanged"
                        sizeChangedEventData: "_size.Y, _parentSize.Y"
                children:
                -   class: "UIControl"
                    name: "SpacerTop"
                    input: false
                    components:
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "FixedSize"
                            verticalValue: 48.000000
                    bindings:
                    - ["visible", "header == \"\""]
                -   class: "UIControl"
                    name: "Content"
                    input: false
                    components:
                        Anchor:
                            hCenterAnchorEnabled: true
                        LinearLayout:
                            orientation: "TopDown"
                        SizePolicy:
                            horizontalPolicy: "Formula"
                            horizontalFormula: "parent - 48"
                            verticalPolicy: "PercentOfChildrenSum"
                        UIChildComponent0:
                            childType: "kControl"
                            control: "contentControl"
                -   class: "UIControl"
                    name: "SpacerDown"
                    visible: true
                    input: false
                    components:
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                            verticalPolicy: "Formula"
                            verticalFormula: "when type == eDialogType.SELECT -> 32, 24"
        -   prototype: "VerticalScrollBar/VerticalScrollBar"
            name: "VerticalScrollBar"
            components:
                Anchor:
                    topAnchorEnabled: true
                    bottomAnchorEnabled: false
                IgnoreLayout: {}
                SizePolicy:
                    verticalPolicy: "FixedSize"
                ScrollBarDelegate:
                    delegate: "../UIScrollView"
            bindings:
            - ["visible", "showScroll"]
            - ["Anchor.topAnchor", "scrollViewYPosition + (when header == \"\" -> 48, 0)"]
            - ["SizePolicy.verticalValue", "scrollViewYSize - (when type == eDialogType.SELECT -> 32, 24) - (when header == \"\" -> 48, 0)"]
            children:
            -   path: "slider"
                visible: true
                children: []
        -   class: "UIControl"
            name: "SeparatorBottom"
            input: false
            classes: "white-wild-sand-10-bg"
            components:
                Background:
                    drawType: "DRAW_FILL"
                UIOpacityComponent: {}
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "FixedSize"
                    verticalValue: 1.000000
                StyleSheet:
                    styles: "~res:/UI/Screens3/Color.style.yaml"
            bindings:
            - ["visible", "type == eDialogType.FILL"]
        -   class: "UIControl"
            name: "Footer"
            input: false
            components:
                LinearLayout:
                    padding: "24"
                    spacing: 24.000000
                SizePolicy:
                    horizontalPolicy: "PercentOfParent"
                    verticalPolicy: "FixedSize"
                    verticalValue: 96.000000
            bindings:
            - ["visible", "type != eDialogType.SELECT"]
            children:
            -   class: "UIControl"
                name: "OptionalButtonContainer"
                input: false
                components:
                    Anchor:
                        vCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfFirstChild"
                bindings:
                - ["visible", "type == eDialogType.CHOOSE or type == eDialogType.FILL"]
                children:
                -   prototype: "Button/Button"
                    name: "ButtonOptionalLight"
                    components:
                        Anchor:
                            vCenterAnchorEnabled: true
                        SizePolicy:
                            horizontalPolicy: "PercentOfParent"
                        UIDataParamsComponent:
                            args:
                                "locked": "false"
                                "caption": "optionalButtonText"
                                "type": "optionalButtonType"
                                "size": "eButtonSize.NORMAL"
                                "sound": "eButtonSound.CANCEL"
                                "enabled": "true"
                                "iconPath": "when isGamepad -> \"~res:/Gfx/Shared/icons/nintendo-switch/icon_switch_b_m\", \"\""
                            eventActions:
                            - ["ON_CLICK_BUTTON", "OPTIONAL_ACTION", "false"]
                        UIIdentifierComponent:
                            id: "button_optional"
            -   class: "UIControl"
                name: "ButtonAccept"
                input: false
                components:
                    Anchor:
                        vCenterAnchorEnabled: true
                    SizePolicy:
                        horizontalPolicy: "PercentOfParent"
                        verticalPolicy: "PercentOfMaxChild"
                    UIChildComponent0:
                        childType: "kControl"
                        condition: "isNull(acceptButtonControl)"
                        control: "ButtonAccept"
                    UIChildComponent1:
                        childType: "kControl"
                        condition: "not isNull(acceptButtonControl)"
                        control: "acceptButtonControl"
Slots:
-   class: "UIControl"
    name: "ButtonAccept"
    size: [197.000000, 48.000000]
    input: false
    components:
        SizePolicy:
            horizontalPolicy: "PercentOfParent"
            verticalPolicy: "PercentOfMaxChild"
    children:
    -   prototype: "Button/Button"
        name: "ButtonPositive"
        components:
            SizePolicy:
                horizontalPolicy: "PercentOfParent"
            UIDataParamsComponent:
                args:
                    "caption": "accentButtonText"
                    "type": "accentButtonType"
                    "size": "eButtonSize.NORMAL"
                    "sound": "eButtonSound.UNKNOWN"
                    "enabled": "acceptButtonEnabled"
                    "iconPath": "when isGamepad -> \"~res:/Gfx/Lobby/icons/nintendo-switch/icon_switch_y_m\", \"\""
                eventActions:
                - ["ON_CLICK_BUTTON", "ACCENT_ACTION", "false"]
            UIIdentifierComponent:
                id: "button_positive"
                params:
                - ["bool", "enabled", "enabled"]
